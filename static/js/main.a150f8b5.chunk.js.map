{"version":3,"sources":["store/constants/constants.js","components/Posts/Posts.js","store/actions/actions.js","components/AddPost/AddPost.js","components/Header/Header.js","store/reducer/addRemovePostsReducer.js","store/reducer/dataFetchingReducer.js","store/rootReducer.js","store/store.js","App.js","index.js"],"names":["ActionTypes","Posts","dispatch","useDispatch","useSelector","result","dataFetchingReducer","posts","isLoading","error","myPosts","addRemovePostsReducer","console","log","useEffect","axios","get","then","response","data","type","payload","catch","addToMyPostsClickHandler","post","className","to","map","index","id","title","body","onClick","AddPost","useState","setTitle","setBody","isEdit","setIsEdit","ediId","setEditId","ediTitle","setEDITTitle","editBody","setEDITBody","deleteHandler","onSubmit","e","preventDefault","Math","trunc","random","onChange","target","value","disabled","editHlickHandler","Header","path","element","initialState","state","val","findIndex","splice","myPostsArray","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","subscribe","getState","unSubscribe","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.a150f8b5.chunk.js","sourcesContent":["export const ActionTypes = {\r\n  FETCH_SUCCESS: \"FETCH_SUCCESS\",\r\n  FETCH_FAILURE: \"FETCH_FAILURE\",\r\n  ADD_POST: \"ADD_POST\",\r\n  REMOVE_POST: \"REMOVE_POST\",\r\n  ADD_TO_MYPOSTS: \"ADD_TO_MYPOSTS\",\r\n  UPDATE_POST: \"UPDATE_POST\"\r\n};\r\n","import axios from \"axios\";\r\nimport \"./Posts.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  addToMyPosts,\r\n  fetchFailure,\r\n  fetchSuccessful\r\n} from \"../../store/actions/actions\";\r\n\r\nconst Posts = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading, error } = useSelector(\r\n    (result) => result.dataFetchingReducer\r\n  );\r\n  const { myPosts } = useSelector((result) => result.addRemovePostsReducer);\r\n  console.log(myPosts);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((response) => {\r\n        dispatch(fetchSuccessful(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchFailure(\"ERROR IN FETCHING DATA\"));\r\n      });\r\n  }, []);\r\n  const addToMyPostsClickHandler = (post) => {\r\n    dispatch(addToMyPosts(post));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <button>\r\n        <Link to=\"/my-posts\">My Posts</Link>\r\n      </button>\r\n      {isLoading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <div className=\"all-cards\">\r\n          {posts.map((post, index) => {\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <h2>{post.id}</h2>\r\n                <div className=\"container\">\r\n                  <h4>{post.title}</h4>\r\n                  <p>{post.body}</p>\r\n                </div>\r\n                <button\r\n                  className=\"btn-class\"\r\n                  onClick={() => addToMyPostsClickHandler(post)}\r\n                >\r\n                  Add to My Posts\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      {error ? error : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Posts;\r\n","import { ActionTypes } from \"../constants/constants\";\r\n\r\nexport const fetchSuccessful = (data) => ({\r\n  type: ActionTypes.FETCH_SUCCESS,\r\n  payload: data\r\n});\r\nexport const fetchFailure = (data) => ({\r\n  type: ActionTypes.FETCH_FAILURE,\r\n  payload: data\r\n});\r\nexport const addPost = (data) => ({\r\n  type: ActionTypes.ADD_POST,\r\n  payload: data\r\n});\r\nexport const removePost = (data) => ({\r\n  type: ActionTypes.REMOVE_POST,\r\n  payload: data\r\n});\r\nexport const addToMyPosts = (data) => ({\r\n  type: ActionTypes.ADD_TO_MYPOSTS,\r\n  payload: data\r\n});\r\nexport const updatePost = (data) => ({\r\n  type: ActionTypes.UPDATE_POST,\r\n  payload: data\r\n});\r\n","import React, { useState } from \"react\";\r\nimport \"./AddPost.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPost, removePost, updatePost } from \"../../store/actions/actions\";\r\n\r\nconst AddPost = () => {\r\n  const { posts } = useSelector((result) => result.dataFetchingReducer);\r\n  const dispatch = useDispatch();\r\n  const { myPosts, isLoading } = useSelector(\r\n    (result) => result.addRemovePostsReducer\r\n  );\r\n  console.log(myPosts);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [ediId, setEditId] = useState(\"\");\r\n  const [ediTitle, setEDITTitle] = useState(\"\");\r\n  const [editBody, setEDITBody] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addPost({\r\n        id: Math.trunc(Math.random() * 1000),\r\n        title: title,\r\n        body: body\r\n      })\r\n    );\r\n    console.log(\"POSTS: \", posts);\r\n  };\r\n  const editSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updatePost({\r\n        id: ediId,\r\n        title: ediTitle,\r\n        body: editBody\r\n      })\r\n    );\r\n  };\r\n  const editHlickHandler = (post) => {\r\n    setIsEdit(true);\r\n    setEditId(post.id);\r\n    setEDITBody(post.body);\r\n    setEDITTitle(post.title);\r\n  };\r\n  const deleteHandler = (post) => {\r\n    dispatch(removePost(post));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"left-div\">\r\n          <form onSubmit={submitHandler}>\r\n            <label>Enter Title:</label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              value={title}\r\n            />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <label>Enter Body:</label>\r\n            <textarea onChange={(e) => setBody(e.target.value)} value={body} />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <button>add post</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"right-div\">\r\n          {isEdit ? (\r\n            <form onSubmit={editSubmitHandler}>\r\n              <label>Id:</label>\r\n              <input type=\"text\" value={ediId} disabled />\r\n\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <label>Enter Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setEDITTitle(e.target.value)}\r\n                value={ediTitle}\r\n              />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <label>Enter Body:</label>\r\n              <textarea\r\n                onChange={(e) => setEDITBody(e.target.value)}\r\n                value={editBody}\r\n              />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <button>update post</button>\r\n            </form>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {isLoading ? (\r\n          \"Loading...\"\r\n        ) : (\r\n          <div className=\"all-cards\">\r\n            {myPosts.map((post, index) => {\r\n              return (\r\n                <div className=\"card\" key={index}>\r\n                  <h2>{post.id}</h2>\r\n                  <div className=\"container\">\r\n                    <h4>{post.title}</h4>\r\n                    <p>{post.body}</p>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn-class\"\r\n                    onClick={() => editHlickHandler(post)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn-class\"\r\n                    onClick={() => deleteHandler(post)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Posts from \"../Posts/Posts\";\r\nimport AddPost from \"../AddPost/AddPost\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Posts />} />\r\n          <Route path=\"/my-posts\" element={<AddPost />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ActionTypes } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  myPosts: [],\r\n  isLoading: true\r\n};\r\n\r\nconst addRemovePostsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.ADD_TO_MYPOSTS:\r\n      return {\r\n        ...state,\r\n        myPosts: [...state.myPosts, payload],\r\n        isLoading: false\r\n      };\r\n    case ActionTypes.ADD_POST:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        myPosts: [...state.myPosts, payload]\r\n      };\r\n    case ActionTypes.REMOVE_POST:\r\n      // console.log('data:',state.posts.splice(state.posts.findIndex(e=>e.id===payload.id),1));\r\n      // let arr = []\r\n      // let filterArr = []\r\n      // console.log('payload:',payload);\r\n      // for (let index = 0; index < state.posts.length; index++) {\r\n      //  if(state.posts[index].id===payload.id){\r\n      //    filterArr.push(state.posts[index])\r\n      //  }  else{\r\n      //    arr.push(state.posts[index])\r\n      //  }\r\n      // }\r\n\r\n      const data = state.myPosts;\r\n      const val = data.findIndex((e) => e.id === payload.id);\r\n      data.splice(val, 1);\r\n      return {\r\n        ...state,\r\n        myPosts: data\r\n      };\r\n    case ActionTypes.UPDATE_POST:\r\n      const index = state.myPosts.findIndex((e) => e.id === payload.id);\r\n      const myPostsArray = [...state.myPosts];\r\n      myPostsArray[index].title = payload.title;\r\n      myPostsArray[index].body = payload.body;\r\n\r\n      return {\r\n        ...state,\r\n        myPosts: myPostsArray\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default addRemovePostsReducer;\r\n","import { ActionTypes } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  error: \"\",\r\n  isLoading: true\r\n};\r\n\r\nconst dataFetchingReducer = (state = initialState, { type, payload }) => {\r\n  console.log(payload);\r\n\r\n  switch (type) {\r\n    case ActionTypes.FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        isLoading: false\r\n      };\r\n    case ActionTypes.FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        isLoading: false\r\n      };\r\n    // case ActionTypes.REMOVE_POST:\r\n    //   // console.log('data:',state.posts.splice(state.posts.findIndex(e=>e.id===payload.id),1));\r\n    //   // let arr = []\r\n    //   // let filterArr = []\r\n    //   // console.log('payload:',payload);\r\n    //   // for (let index = 0; index < state.posts.length; index++) {\r\n    //   //  if(state.posts[index].id===payload.id){\r\n    //   //    filterArr.push(state.posts[index])\r\n    //   //  }  else{\r\n    //   //    arr.push(state.posts[index])\r\n    //   //  }\r\n    //   // }\r\n\r\n    //   const data = state.posts;\r\n    //   const val = data.findIndex((e) => e.id === payload.id);\r\n    //   data.splice(val, 1);\r\n\r\n    //   return {\r\n    //     ...state,\r\n    //     posts: data\r\n    //   };\r\n    // case ActionTypes.ADD_POST:\r\n    //   console.log(payload);\r\n    //   console.log(state.posts);\r\n\r\n    //   return {\r\n    //     ...state,\r\n    //     posts: [...state.posts, payload]\r\n    //   };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default dataFetchingReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport addRemovePostsReducer from \"./reducer/addRemovePostsReducer\";\r\nimport dataFetchingReducer from \"./reducer/dataFetchingReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dataFetchingReducer,\r\n  addRemovePostsReducer\r\n});\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import { Provider } from \"react-redux\";\nimport Header from \"./components/Header/Header\";\nimport store from \"./store/store\";\n\nexport default function App() {\n  // console.log('getState:',store.getState());\n  const unSubscribe = store.subscribe(() =>\n    console.log(\"getState:\", store.getState())\n  );\n  unSubscribe();\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Header />\n      </Provider>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}